buildscript {
    repositories {
        mavenCentral()
        maven {
            name 'Bintray'
            url 'https://dl.bintray.com/exactpro/th2'
        }
        mavenLocal()
    }
    
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.13"
    }
}

plugins {
    id "com.jfrog.bintray" version '1.8.5'
}

apply plugin: "java"
apply plugin: "java-library"
apply plugin: "com.google.protobuf"
apply plugin: "maven-publish"
apply plugin: 'com.jfrog.bintray'

group = 'com.exactpro.th2'
version = release_version

sourceCompatibility = 11
targetCompatibility = 11

ext {
    grpcVersion                 = '1.32.1'
    protobufVersion             = '3.13.0'
    serviceGeneratorVersion     = '3.1.5'

    genDir              = file("${project.rootDir}/src/gen")
    sharedDir           = file("${project.rootDir}/shared")
}

repositories {
    mavenCentral()
    maven {
        name 'Bintray'
        url 'https://dl.bintray.com/exactpro/th2'
    }
    mavenLocal()

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    api platform('com.exactpro.th2:bom:2.10.1')

    api "com.exactpro.th2:grpc-sim:3.0.0"
    api "com.google.protobuf:protobuf-java-util"
    api "io.grpc:grpc-stub"
    implementation "io.grpc:grpc-protobuf"
    implementation "io.grpc:grpc-core"
    implementation "io.grpc:grpc-netty"

    implementation "javax.annotation:javax.annotation-api:1.3.2"

    implementation "com.exactpro.th2:grpc-service-generator:${serviceGeneratorVersion}"
}

sourceSets {
    main {
        proto {
            srcDirs 'src/main/proto'
        }
        java {
            srcDirs 'src/gen/main/java', 'src/gen/main/grpc', 'src/gen/main/services/java/src'
        }
        resources {
            srcDirs 'src/gen/main/services/java/resources'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        services {
            artifact = "com.exactpro.th2:grpc-service-generator:${serviceGeneratorVersion}:all@jar"
        }
    }
    generateProtoTasks.generatedFilesBaseDir = genDir
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            services {
                option 'javaInterfacesPath=./java/src'
                option 'javaInterfacesImplPath=./java/src'
                option 'javaMetaInfPath=./java/resources'
                option 'pythonPath=./python'
            }
        }
        ofSourceSet('main')
    }
}

compileJava.dependsOn.add('generateProto')

// prevent publish to Bintray from gitlab
tasks.withType(PublishToMavenRepository) {
    onlyIf {
        (publication == publishing.publications.mavenJava)
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
        bintrayPublication(MavenPublication) {
            from components.java
            groupId group
            artifactId rootProject.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('name', rootProject.name)
                root.appendNode('url', "${vcs_url}")
            }
        }
    }

    repositories {
        maven {
            name = 'localRepo'
            url = sharedDir
        }
//Nexus repo for publish from gitlab
        maven {
            name = 'nexusRepository'
            credentials {
                username = "${nexus_user}"
                password = "${nexus_password}"
            }
            url = "${nexus_url}"
        }
    }
}

bintray {
    user = "${bintray_user}"
    key = "${bintray_key}"
    publications = ['bintrayPublication']
    pkg {
        repo = 'th2'
        name = rootProject.name
        userOrg = 'exactpro'
        licenses = ['Apache-2.0']
        vcsUrl = "${vcs_url}"
        version {
            name = project.version
            desc = project.version
            released = new Date()
        }
    }
    publish = true
}

clean {
    delete genDir
    delete sharedDir
}
